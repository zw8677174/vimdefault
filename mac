call plug#begin('~/.vim/plugged')

" 人性化 提前显示
Plug 'tpope/vim-sensible'
" 定义首页
Plug 'mhinz/vim-startify'
" ga format
Plug 'junegunn/vim-easy-align'
" 自动折叠 目前功能未知
Plug 'Konfekt/FastFold'
" nerdtree
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
" vue
"Plug 'posva/vim-vue'
" airline
Plug 'vim-airline/vim-airline'
" solarized color
Plug 'altercation/vim-colors-solarized'
" 两端加括号
Plug 'tpope/vim-surround'
" git display
Plug 'airblade/vim-gitgutter'
" complete word
Plug 'Valloric/YouCompleteMe', { 'do': './install.py' }
" fzf
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
" go
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
" reset rooter
Plug 'airblade/vim-rooter'
" 缩进显示竖线
Plug 'Yggdroot/indentLine'
" recent file
Plug 'vim-scripts/mru.vim'
" write page
Plug 'junegunn/goyo.vim'

"markdown Support
"https://github.com/plasticboy/vim-markdown
"Plug 'godlygeek/tabular'
"Plug 'plasticboy/vim-markdown'
"Plug 'instant-markdown/vim-instant-markdown', {'for': 'markdown'}


"chose plug
Plug 'terryma/vim-expand-region'

"git plug
Plug 'tpope/vim-fugitive'

"copy without replace
Plug 'maxbrunsfeld/vim-yankstack'

Plug 'prettier/vim-prettier', {
  \ 'do': 'npm install',
  \ 'for': ['php'] }


call plug#end()

set rtp+=~/.fzf

"***************  vim-expand-region  ********************
map ∑ <Plug>(expand_region_expand)
map K <Plug>(expand_region_expand)
map J <Plug>(expand_region_shrink)

"***************  writemod  *********************
" up Goyo
" down Goyo!

"***************  fold  *********************
nmap zuz <Plug>(FastFoldUpdate)
"let g:fastfold_savehook = 1
"let g:fastfold_fold_command_suffixes =  ['x','X','a','A','o','O','c','C']
"let g:fastfold_fold_movement_commands = [']z', '[z', 'zj', 'zk']
"
"let g:markdown_folding = 1
"let g:tex_fold_enabled = 1
"let g:vimsyn_folding = 'af'
"let g:xml_syntax_folding = 1
"let g:javaScript_fold = 1
"let g:sh_fold_enabled= 7
"let g:ruby_fold = 1
"let g:perl_fold = 1
"let g:perl_fold_blocks = 1
"let g:r_syntax_folding = 1
"let g:rust_fold = 1
"let g:php_folding = 1
"
"***************  format  *********************
" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)


"***************  tree  *********************
"autocmd vimenter * NERDTree
"autocmd VimEnter * wincmd p
autocmd StdinReadPre * let s:std_in=1
" 直接打开文件夹
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | exe 'cd '.argv()[0] | endif
"如果是最后一个就关闭vim
"autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
let g:NERDTreeWinPos='right'
map <F3> :NERDTreeMirror<CR>
map <F3> :NERDTreeToggle<CR>
"显示隐藏文件
let NERDTreeShowHidden=1
let g:NERDTreeWinPos='left'

"***************** color *********************
let g:solarized_termcolors=256
syntax enable
set background=light
colorscheme solarized

"***************** airline *********************
let g:airline#extensions#tabline#enabled = 1

"***************** fold *********************
nmap zuz <Plug>(FastFoldUpdate)
let g:fastfold_savehook = 1

"***************** java complete *********************

"autocmd FileType java setlocal omnifunc=javacomplete#Complete
"
"nmap \ <Plug>(JavaComplete-Imports-Add)
"nmap ∆ <Plug>(JavaComplete-Imports-Add)
"imap ∆ <Plug>(JavaComplete-Imports-Add)
"nmap ˚ <Plug>(JavaComplete-Imports-AddSmart)
"imap ˚ <Plug>(JavaComplete-Imports-AddSmart)

"***************** style *********************
set showmatch
set cul
set nu
set ts=4
set expandtab
set autoindent
set sw=4
set tabstop=4
set expandtab


"***************** alias *********************
nnoremap ∂ :Files<ENTER>
nnoremap ƒ :Ag<ENTER>
nnoremap <tab> :bp<ENTER>
nnoremap <s-tab> :bnext<ENTER>

nnoremap ® :noh<ENTER>
nnoremap ß :Prettier && :w<ENTER>
nnoremap ç viwy
nnoremap √ viwpviwy
nnoremap œ :bdelete<ENTER>
nnoremap å ggVG


noremap ÷ :s/^/\/\/<ENTER>:noh<ENTER>
noremap ÷÷ :s/\/\//<ENTER>:noh<ENTER>
"autocmd filetype python,php  vnoremap <buffer> ÷ :s/^/#<enter>:noh<enter>
"autocmd filetype python,php  vnoremap <buffer> ÷ :s/##//<enter>:noh<enter>
map ´ :MRU<enter>
map Ω zr
map ≈ zm
